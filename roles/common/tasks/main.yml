- name: set proxmox password
  set_fact:
    proxmox_password: "{{ lookup('env','PROXMOX_PASSWORD_'+proxmox_var.host.split('.')[0]) }}"
  when: proxmox_var is defined and vm_host is defined and lookup('env','PROXMOX_PASSWORD_'+proxmox_var.host.split('.')[0])

- name: init cache/templates/
  local_action:
    module: file
    path: "cache/templates/"
    state: directory
    force: no
  when: proxmox_password is defined
  become: no

- name: download proxmox template
  local_action:
    module: get_url
    dest: "cache/templates/{{ item }}"
    url: "http://download.proxmox.com/images/system/{{ item }}"
  with_items:
    - "{{ proxmox_var.ostemplate }}"
    - "{{ '.'.join(proxmox_var.ostemplate.split('.')[0:-2]) + '.aplinfo' }}"
  when: proxmox_password is defined
  register: download_template
  become: no

- name: check template sha512sum
  local_action:
    module: shell
    _raw_params: "sha512sum 'cache/templates/{{ proxmox_var.ostemplate | quote }}' | grep $(grep sha512sum: 'cache/templates/{{ '.'.join(proxmox_var.ostemplate.split('.')[0:-2]) + '.aplinfo' | quote }}' | cut -d' ' -f2)"
  when: proxmox_password is defined and download_template.changed
  become: no

- name: send proxmox template
  local_action:
    module: proxmox_template
    timeout: 60
    api_host: "{{ proxmox_var.host }}"
    api_user: "ansible@pve"
    api_password: "{{ proxmox_password }}"
    node: "{{ vm_host.split('.')[0] }}"
    src: "cache/templates/{{ proxmox_var.ostemplate }}"
    storage: "local"
  when: proxmox_password is defined
  become: no

- name: create VM
  local_action:
    module: proxmox
    timeout: 240
    api_host: "{{ proxmox_var.host }}"
    api_user: "ansible@pve"
    api_password: "{{ proxmox_password }}"
    cores: "{{ proxmox_var.cpus }}"
    cpus: "{{ proxmox_var.cpus }}"
    disk: "{{ proxmox_var.disk }}"
    hostname: "{{ inventory_hostname }}"
    netif: "{{ proxmox_var.netif }}"
    memory: "{{ proxmox_var.memory }}"
    node: "{{ vm_host.split('.')[0] }}"
    onboot: yes
    ostemplate: "local:vztmpl/{{ proxmox_var.ostemplate }}"
    password: "{{ lookup('password', 'credentials/proxmox/' + inventory_hostname) }}"
    pubkey: "{{ lookup('file', lookup('env','PROXMOX_SSHPUBKEY')) }}"
    state: present
    storage: "{{ proxmox_var.storage }}"
    swap: "{{ proxmox_var.swap }}"
    unprivileged: yes
    vmid: "{{ proxmox_var.vmid }}"
  when: proxmox_password is defined
  register: create_vm
  become: no

- name: start VM
  local_action:
    module: proxmox
    api_host: "{{ proxmox_var.host }}"
    api_user: "ansible@pve"
    api_password: "{{ proxmox_password }}"
    state: started
    vmid: "{{ proxmox_var.vmid }}"
  when: proxmox_password is defined
  become: no

- name: configure ipv6 on host interfaces
  interfaces_file:
    iface: vmbr0
    address_family: inet6
    option: "post-up"
    value: "/sbin/ip -f inet6 neigh add proxy {{ proxmox_var.ipv6 }} dev vmbr1"
  delegate_to: "{{ vm_host }}"
  when: proxmox_password is defined and create_vm.changed and vm_host | regex_search('osm2[678].openstreetmap.fr')
  become: yes

- name: configure ipv6 on host
  raw: "/sbin/ip -f inet6 neigh add proxy {{ proxmox_var.ipv6 }} dev vmbr1 "
  delegate_to: "{{ vm_host }}"
  when: proxmox_password is defined and create_vm.changed and vm_host | regex_search('osm2[678].openstreetmap.fr')
  become: yes

- name: configure ipv6 on host interfaces
  interfaces_file:
    iface: vmbr1
    address_family: inet6
    option: "post-up"
    value: "/sbin/ip -f inet6 neigh add proxy {{ proxmox_var.ipv6 }} dev vmbr0"
  delegate_to: "{{ vm_host }}"
  when: proxmox_password is defined and create_vm.changed and vm_host | regex_search('osm1[123].openstreetmap.fr')
  become: yes

- name: configure ipv6 on host
  raw: "/sbin/ip -f inet6 neigh add proxy {{ proxmox_var.ipv6 }} dev vmbr0 "
  delegate_to: "{{ vm_host }}"
  when: proxmox_password is defined and create_vm.changed and vm_host | regex_search('osm1[123].openstreetmap.fr')
  become: yes


- name: add VM to .ssh/config
  run_once: true
  local_action:
    module: blockinfile
    path: "~/.ssh/config"
    backup: yes
    marker: "# {mark} ANSIBLE MANAGED for vm {{ item }}"
    block: |
      Host {{ item }}
        Hostname {{ hostvars[item].proxmox_var.ipv6 }}
  with_items: '{{play_hosts}}'
  when: proxmox_password is defined and create_vm.changed
  become: no

- name: add ssh key to known_hosts
  run_once: true
  local_action:
    module: known_hosts
    name: "{{ hostvars[item].proxmox_var.ipv6 }}"
    key: "{{ lookup('pipe', 'ssh-keyscan {{ hostvars[item].proxmox_var.ipv6 }}') }}"
  with_items: '{{play_hosts}}'
  when: proxmox_password is defined and create_vm.changed
  become: no

- name: apt-get update
  raw: "[ -e /usr/bin/apt-get ] && apt-get update"

- name: bootstrap python-apt package
  raw: "[ -e /usr/bin/apt-get ] && apt-get -y install python-apt"

- name: Gathering facts
  setup:

# disabling atopacct, as it breaks apt-get install atop
- name: Disable atopacct on Debian 9
  file:
    state: link
    src: "/dev/null"
    path: "/etc/systemd/system/atopacct.service"
  when: ((ansible_distribution == 'Debian' and ansible_distribution_major_version == '8') or
         (ansible_distribution == 'Debian' and ansible_distribution_major_version == '9') or
         (ansible_distribution == 'Debian' and ansible_distribution_major_version == '10') or
         (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '17') or
         (ansible_distribution == 'Ubuntu' and ansible_distribution_major_version == '18'))

- set_fact: install_apache=false
  when: install_apache is undefined

- name: add buster-backports for monit
  apt_repository:
    filename: 'backports'
    repo: 'deb http://ftp.debian.org/debian buster-backports backports main'
    state: present
    update_cache: yes
  when: ansible_distribution_release == "buster"

#- apt: update_cache=yes
- name: install packages
  apt: pkg={{ item }} update_cache=yes
  with_items:
    - python
    - python-apt

    - acl
    - atop
    - bash-completion
    - ca-certificates
    - etckeeper
    - fail2ban
    - git
    - htop
    - lftp
    - libdbd-pg-perl  # for postgresql's munin plugin
    - locales
    - logrotate
    - mc # Midnight Commander
    - monit
    - munin-node
    - nano
    - rsync # for backuppc
    - screen
    - sudo
    - time
    - vim-nox
    - wget
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install packages
  apt: pkg={{ item }} update_cache=no
  with_items:
    - language-pack-en-base
  when: ansible_distribution == 'Ubuntu'

- name: install packages for apache2
  apt: pkg={{ item }} update_cache=yes
  with_items:
    - apache2
    - libwww-perl  # for apache's munin plugin
  when: (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu') and install_apache

- name: remove packages
  apt: pkg={{ item }} state=absent
  with_items:
    - locate
    - mlocate
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: install packages
  yum: name={{ item }}
  with_items:
    - python

    - atop
    - bash-completion
    - etckeeper
    - fail2ban
    - git
    - htop
    - lftp
    - mc # Midnight Commander
    - monit
    - munin-node
    - nano
    - screen
    - sudo
    - time
    - vim-enhanced
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'


- name: install sensors package
  apt: pkg={{ item }}
  with_items:
    - lm-sensors   # for sensors's munin plugin
  notify:
    - detect sensors
  when: not 'vm' in group_names and (ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu')

- name: init /data/ paths
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    force: no
  with_items:
    - /data
    - /data/project
    - /data/work

- include: ../../../shared/account.yml user=cquest  uid=1202
- include: ../../../shared/account.yml user=jocelyn uid=1203
- include: ../../../shared/account.yml user=marc_marc uid=1216

- include: ../../../shared/account.yml user=achetta uid=1236
  when: "'achetta' in group_names"

- include: ../../../shared/account.yml user=apavie uid=1211
  when: "'apavie' in group_names"

- include: ../../../shared/account.yml user=cgiquello uid=1212
  when: "'cgiquello' in group_names"

- include: ../../../shared/account.yml user=cormoran uid=1219
  when: "'cormoran' in group_names"

- include: ../../../shared/account.yml user=don-vip uid=1247
  when: "'don-vip' in group_names"

- include: ../../../shared/account.yml user=driss uid=1224
  when: "'driss' in group_names"

- include: ../../../shared/account.yml user=etienne uid=1213
  when: "'etienne' in group_names"

- include: ../../../shared/account.yml user=eloks uid=1214
  when: "'eloks' in group_names"

- include: ../../../shared/account.yml user=francois2 uid=1221
  when: "'francois2' in group_names"

- include: ../../../shared/account.yml user=fred uid=1205
  when: "'fred' in group_names"

- include: ../../../shared/account.yml user=gileri uid=1311
  when: "'gileri' in group_names"

- include: ../../../shared/account.yml user=guillaumeamat uid=1235
  when: "'guillaumeamat' in group_names"

- include: ../../../shared/account.yml user=gpelloux uid=1237
  when: "'gpelloux' in group_names"

- include: ../../../shared/account.yml user=hamlet uid=1305
  when: "'hamlet' in group_names"

- include: ../../../shared/account.yml user=jben uid=1206
  when: "'jben' in group_names"

- include: ../../../shared/account.yml user=jgcailton uid=1207
  when: "'jgcailton' in group_names"

- include: ../../../shared/account.yml user=juliep uid=1210
  when: "'juliep' in group_names"

- include: ../../../shared/account.yml user=karl uid=1238
  when: "'karl' in group_names"

- include: ../../../shared/account.yml user=lcombe uid=1215
  when: "'lcombe' in group_names"

- include: ../../../shared/account.yml user=mael uid=1218
  when: "'mael' in group_names"

- include: ../../../shared/account.yml user=nlehuby uid=1220
  when: "'nlehuby' in group_names"

- include: ../../../shared/account.yml user=nmoyroud uid=1226
  when: "'nmoyroud' in group_names"

- include: ../../../shared/account.yml user=panieravide uid=1230
  when: "'panieravide' in group_names"

- include: ../../../shared/account.yml user=phyks uid=1233
  when: "'phyks' in group_names"

- include: ../../../shared/account.yml user=redfox uid=1209
  when: "'redfox' in group_names"

- include: ../../../shared/account.yml user=rodolphe uid=1208
  when: "'rodolphe' in group_names"

- include: ../../../shared/account.yml user=rvoirin uid=1308
  when: "'rvoirin' in group_names"

- include: ../../../shared/account.yml user=sly     uid=1209
  when: "'sly' in group_names"

- include: ../../../shared/account.yml user=teslix uid=1222
  when: "'teslix' in group_names"

- include: ../../../shared/account.yml user=thomasl uid=1210
  when: "'thomasl' in group_names"

- include: ../../../shared/account.yml user=thorieux uid=1229
  when: "'thorieux' in group_names"

- include: ../../../shared/account.yml user=thrrp uid=1310
  when: "'thrrp' in group_names"

- include: ../../../shared/account.yml user=tyndare uid=1212
  when: "'tyndare' in group_names"

- include: ../../../shared/account.yml user=vdct uid=1217
  when: "'vdct' in group_names"

- include: ../../../shared/account.yml user=ybon uid=1223
  when: "'ybon' in group_names"

- name: add default sudoers
  copy:
    src: sudoers
    dest: /etc/sudoers.d/ansible-common
    mode: 0440
    owner: root
    group: root
    validate: 'visudo -cf %s'

- name: add sudoers for users
  template:
    src: sudoers-users
    dest: /etc/sudoers.d/ansible-common-users
    mode: 0440
    owner: root
    group: root
    validate: 'visudo -cf %s'
  when: users_root is defined or group_users_root is defined


- name: add alias for ll
  lineinfile:
    dest: /etc/bash.bashrc
    regexp: 'alias ll="ls -l"'
    line: 'alias ll="ls -l"'
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- name: Check if user backuppc exists
  action: shell /usr/bin/getent passwd backuppc
  register: user_exist
  ignore_errors: True
  changed_when: "user_exist.rc != 0"

- name: add user backuppc
  user:
    name: backuppc
    home: /home/backuppc
    system: yes
  when: user_exist.changed

- name: init group backuppc
  group:
    name: backuppc

- name: init backuppc ssh
  file:
    path: /home/backuppc/.ssh
    state: directory
    mode: 0700
    owner: backuppc
    group: backuppc

- name: add authorized_keys for user backuppc
  copy:
    src: backuppc.authorized_keys
    dest: /home/backuppc/.ssh/authorized_keys
    mode: 0600
    owner: backuppc
    group: backuppc
    force: yes

- name: add ssh key to user backuppc
  authorized_key:
    user: backuppc
    key: "{{ lookup('file',item) }}"
  with_fileglob:
    - "{{ lookup('env','PWD') }}/public_keys/backuppc-*"

- name: update hosts.allow
  lineinfile:
    dest: /etc/hosts.allow
    regexp: '^{{ item }}$'
    line: '{{ item }}'
  with_items:
    - 'sshd: 127.0.0.1'
    - 'sshd: 78.238.28.132'      # Jocelyn
    - 'sshd: stmaur.cquest.org'  # Christian
    - 'sshd: osm2.crans.org'     # backup
    - 'sshd: osm3.crans.org'     # backup
    - 'sshd: .openstreetmap.fr'  # other machines

- name: configure locales
  lineinfile:
    dest: /etc/locale.gen
    regexp: "{{ item }}"
    line: "{{ item }} "
  notify:
    - generate locales
  with_items:
    - en_GB.UTF-8 UTF-8
    - en_US.UTF-8 UTF-8
    - fr_FR.UTF-8 UTF-8
  when: ansible_distribution == 'Debian'


- name: create locales
  copy:
    content: ""
    dest: /var/lib/locales/supported.d/local
    force: no
    owner: root
  when: ansible_distribution == 'Ubuntu'

- name: configure locales
  lineinfile:
    dest: /var/lib/locales/supported.d/local
    regexp: "{{ item }}"
    line: "{{ item }} "
  notify:
    - generate locales
  with_items:
    - en_GB.UTF-8 UTF-8
    - en_US.UTF-8 UTF-8
    - fr_FR.UTF-8 UTF-8
  when: ansible_distribution == 'Ubuntu'

- name: select default locale
  debconf:
    name: locales
    question: locales/default_environment_locale
    value: en_US.UTF-8
    vtype: select
  notify:
    - generate locales
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

# necessary to run a lot of containers, each which systemd launching several inotify
- name: increase fs.inotify.max_user_instances on host
  sysctl:
    name: fs.inotify.max_user_instances
    value: 1024
    sysctl_file: /etc/sysctl.d/ansible.conf
  when: "not 'vm' in group_names"

- include: ssh-tunnel.yml user=ssh-tunnel uid=1104
  when: "'ssh-tunnel' in group_names"

- include: apache2.yml

- include: nginx.yml

- include: monit.yml

- include: munin-node.yml

- include: sysstat.yml

- include: ntp.yml
  when: "not 'vm' in group_names"

